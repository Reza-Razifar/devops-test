# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

permissions:
  actions: write
  contents: write
  security-events: write
  pull-requests: write
  issues: write
  repository-projects: write
  
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
#     - name: Set up Python 3.10
#       uses: actions/setup-python@v3
#       with:
#         python-version: "3.10"
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest
#       run: |
#         pytest
#     - name: Auto Merge
#       run: |
#         git config user.name "$(git log -n 1 --pretty=format:%an)"
#         git config user.email "$(git log -n 1 --pretty=format:%ae)"
#         git fetch
#         git checkout master
#         git merge --allow-unrelated-histories pull/${{ github.event.number }}/merge
#         git push origin master
    - name: sss
      uses: "pascalgn/automerge-action@v0.15.6"
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        MERGE_LABELS: ""
